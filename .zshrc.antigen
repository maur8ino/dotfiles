# Antigen
source ~/dotfiles/antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Antigen bundles
antigen bundles <<EOBUNDLES
  # Package managers
  brew
  pip
  gem
  npm

  # Guess what to install when running an unknown command.
  command-not-found

  # Help working with version control systems.
  svn
  git

  # The heroku tool helper plugin.
  heroku

  # Syntax highlighting bundle.
  zsh-users/zsh-syntax-highlighting

  # History search substring
  zsh-users/zsh-history-substring-search

  # Arialdomartini
  #arialdomartini/oh-my-git

  # brew
  robbyrussell/oh-my-zsh plugins/brew

  # Completions
  zsh-users/zsh-completions src
  yonchu/grunt-zsh-completion
  emallson/gulp-zsh-completion
  felixr/docker-zsh-completion
EOBUNDLES

# Load the theme.
antigen theme robbyrussell

#antigen theme arialdomartini/oh-my-git-themes oppa-lana-style

# Tell antigen that you're done.
antigen apply

# bind UP and DOWN arrow keys
zmodload zsh/terminfo
bindkey "$terminfo[cuu1]" history-substring-search-up
bindkey "$terminfo[cud1]" history-substring-search-down

# home bin folder
export PATH="$HOME/bin:$PATH"

# rbenv
#export PATH="$HOME/.rbenv/bin:$PATH"
#eval "$(rbenv init -)"

# nvm
export NVM_DIR=~/.nvm
source $(brew --prefix nvm)/nvm.sh

# loading autojump
[[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh

# gpg agent
#export PATH="$(brew --prefix)/opt/gpg-agent/bin:$PATH"
#if test -f ~/.gnupg/.gpg-agent-info -a -n "$(pgrep gpg-agent)"; then
#  source ~/.gnupg/.gpg-agent-info
#  export GPG_AGENT_INFO
#else
#  eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info)
#fi

# Setting editor
export EDITOR="$(which nvim)"

# Specify your defaults in this environment variable
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

# prevent sending analytics information
export HOMEBREW_NO_ANALYTICS=1

# Setting Go path
export GOPATH=~/go
export PATH="$GOPATH/bin:$PATH"

# (Neo)Vim
#alias e='nvim'
#alias vi='nvim'

# Emacs
#alias e='emacsclient -t'
#alias e='emacsclient -t'
#alias vi='emacsclient -t'
#alias ec='emacsclient -c'
#alias vim='emacsclient -t'
#alias vi='emacsclient -t'

# Add Visual Studio Code (code)
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

# Anaconda
#export PATH=/usr/local/anaconda3/bin:"$PATH"

# Remy Sharp's nice cli tools
#alias cat='bat'
#alias ping='prettyping --nolegend'
#alias preview="fzf --preview 'bat --color \"always\" {}'"

# mov2gif function
function mov2gif {
  file="$1"
  if [ $1 ]; then
    if [[ "$file" == *.mov || "$file" == *.MOV ]]; then
      echo -n "Generating gif from movie '$1' ... "
      rm "$1".gif &> /dev/null
      ffmpeg -i "$1" -r 10 -f image2pipe -vcodec ppm - 2>/dev/null | convert -verbose +dither -layers Optimize -resize 600x600\> - gif:- 2>/dev/null | gifsicle --colors 128 --delay=5 --loop --optimize=3 --multifile - 2>/dev/null > "$1".gif
      echo -n "done\nMoving gif to '$1.gif' ... done\n"
    else
      echo -n "Error: '$1' is not a .mov file!\n"
    fi
  else
    echo -n "Error: no argument"
  fi
}

# Do not enter command lines into the history list
# if they are duplicates of the previous event
setopt histignoredups

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.zshrc.work ] && source ~/.zshrc.work

